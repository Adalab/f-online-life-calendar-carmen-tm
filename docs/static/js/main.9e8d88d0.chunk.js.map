{"version":3,"sources":["images/noun_cry_2257022.svg","images/noun_Happy_2257035.svg","components/Btn/index.js","services/getSmileFace.js","containers/CalendarPage/index.js","components/DateInput/index.js","components/MoodInput/index.js","components/MessageInput/index.js","containers/EditionPage/index.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Btn","_ref","className","btnText","btnHandler","react_default","a","createElement","onClick","getSmileFace","mood","noun_Happy_2257035","noun_cry_2257022","CalendarPage","moodDataArr","btnNewRecordHandler","react_router_dom","to","title","components_Btn","map","moodItem","index","key","src","moodValue","alt","moment","dateValue","format","messageValue","DateInput","dateHandler","htmlFor","type","id","value","onChange","MoodInput","inputId","textLabel","moodHandler","name","checked","includes","MessageInput","messageHandler","cols","rows","placeholder","EditionPage","btnSaveHandler","btnCancelHandler","action","components_DateInput","components_MoodInput","components_MessageInput","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","currentTarget","console","log","setState","prevState","newMoodData","objectSpread","storeInfoLS","state","Date","JSON","parse","localStorage","getItem","bind","assertThisInitialized","resetMoodData","_this2","concat","sort","b","setItem","stringify","_this$state$newMoodDa","react_router","exact","path","containers_CalendarPage","containers_EditionPage","React","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sYCmBzBC,SAdH,SAAAC,GAAwC,IAArCC,EAAqCD,EAArCC,UAAWC,EAA0BF,EAA1BE,QAASC,EAAiBH,EAAjBG,WAClC,OACCC,EAAAC,EAAAC,cAAA,UAAQL,UAAWA,EAAWM,QAASJ,GACrCD,uDCGWM,EARM,SAAAC,GACpB,MAAa,OAATA,EACIC,IACY,OAATD,EACHE,SADD,GC2COC,SAxCM,SAAAZ,GAA0C,IAAvCa,EAAuCb,EAAvCa,YAAaC,EAA0Bd,EAA1Bc,oBACpC,OACCV,EAAAC,EAAAC,cAAA,OAAKL,UAAU,qBACdG,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,gBAAgBC,MAAM,qBAC9Bb,EAAAC,EAAAC,cAACY,EAAD,CACCjB,UAAU,iBACVC,QAAQ,IACRC,WAAYW,KAIdV,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAA,MAAIL,UAAU,aACZY,EAAYM,IAAI,SAACC,EAAUC,GAC3B,OACCjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,EAAOpB,UAAU,aACzBG,EAAAC,EAAAC,cAAA,OACCL,UAAU,mBACVsB,IAAKf,EAAaY,EAASI,WAC3BC,IAAKL,EAASI,YAEfpB,EAAAC,EAAAC,cAAA,aACEoB,IAAON,EAASO,WAAWC,OAAO,iBAEpCxB,EAAAC,EAAAC,cAAA,KAAGL,UAAU,sBAAsBmB,EAASS,sBCfrCC,SAdG,SAAA9B,GAAgC,IAA7B2B,EAA6B3B,EAA7B2B,UAAWI,EAAkB/B,EAAlB+B,YAC/B,OACC3B,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SAAO0B,QAAQ,QAAf,QACA5B,EAAAC,EAAAC,cAAA,SAAO2B,KAAK,OAAOC,GAAG,OAAOC,MAAOR,EAAWS,SAAUL,OCmB7CM,SAvBG,SAAArC,GAAoD,IAAjDsC,EAAiDtC,EAAjDsC,QAASC,EAAwCvC,EAAxCuC,UAAWf,EAA6BxB,EAA7BwB,UAAWgB,EAAkBxC,EAAlBwC,YACnD,OACCpC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SAAO0B,QAAQ,QAAQO,GACvBnC,EAAAC,EAAAC,cAAA,SACC2B,KAAK,QACLQ,KAAK,OACLN,MAAOI,EACPL,GAAII,EACJI,QAASlB,EAAUmB,SAASJ,GAC5BH,SAAUI,OCSCI,SAnBM,SAAA5C,GAAsC,IAAnC6B,EAAmC7B,EAAnC6B,aAAcgB,EAAqB7C,EAArB6C,eACrC,OACCzC,EAAAC,EAAAC,cAAA,YACCmC,KAAK,UACLP,GAAG,UACHY,KAAK,KACLC,KAAK,KACLC,YAAY,2BACZb,MAAON,EACPO,SAAUS,MC2DEI,SA/DK,SAAAjD,GASd,IARL2B,EAQK3B,EARL2B,UACAI,EAOK/B,EAPL+B,YACAP,EAMKxB,EANLwB,UACAgB,EAKKxC,EALLwC,YACAX,EAIK7B,EAJL6B,aACAgB,EAGK7C,EAHL6C,eACAK,EAEKlD,EAFLkD,eACAC,EACKnD,EADLmD,iBAEA,OACC/C,EAAAC,EAAAC,cAAA,eACCF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,QAAM8C,OAAO,QACZhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAW1B,UAAWA,EAAWI,YAAaA,IAC9C3B,EAAAC,EAAAC,cAACgD,EAAD,CACChB,QAAQ,YACRC,UAAU,KACVf,UAAWA,EACXgB,YAAaA,IAEdpC,EAAAC,EAAAC,cAACgD,EAAD,CACChB,QAAQ,UACRC,UAAU,KACVf,UAAWA,EACXgB,YAAaA,IAEdpC,EAAAC,EAAAC,cAACiD,EAAD,CACC1B,aAAcA,EACdgB,eAAgBA,IAGjBzC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,IAAIC,MAAM,2BAClBb,EAAAC,EAAAC,cAACY,EAAD,CACCjB,UAAU,YACVC,QAAQ,OACRC,WAAY+C,KAId9C,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAG,IAAIC,MAAM,iCAClBb,EAAAC,EAAAC,cAACY,EAAD,CACCjB,UAAU,cACVC,QAAQ,SACRC,WAAYgD,gBCsFHK,qBAnId,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA8CP1B,YAAc,SAAAkC,GAAK,IACV9B,EAAU8B,EAAEC,cAAZ/B,MACRgC,QAAQC,IAAIjC,GACZuB,EAAKW,SAAS,SAAAC,GACb,MAAO,CACNC,YAAYZ,OAAAa,EAAA,EAAAb,CAAA,GACRW,EAAUC,YADH,CAEV5C,UAAWQ,QAtDIuB,EA4DnBlB,YAAc,SAAAyB,GAAK,IACV9B,EAAU8B,EAAEC,cAAZ/B,MACRgC,QAAQC,IAAIjC,GACZuB,EAAKW,SAAS,SAAAC,GACb,MAAO,CACNC,YAAYZ,OAAAa,EAAA,EAAAb,CAAA,GACRW,EAAUC,YADH,CAEV/C,UAAWW,QAnEIuB,EAyEnBb,eAAiB,SAAAoB,GAAK,IACb9B,EAAU8B,EAAEC,cAAZ/B,MACRgC,QAAQC,IAAIjC,GACZuB,EAAKW,SAAS,SAAAC,GACb,MAAO,CACNC,YAAYZ,OAAAa,EAAA,EAAAb,CAAA,GACRW,EAAUC,YADH,CAEV1C,aAAcM,QAhFCuB,EAsFnBR,eAAiB,SAAAe,GAChBP,EAAKe,eApFLf,EAAKgB,MAAQ,CACZH,YAAa,CACZ5C,UAAWD,IAAO,IAAIiD,MAAQ/C,OAAO,cACrCJ,UAAW,KACXK,aAAc,IAEfhB,YAAa+D,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,IAGpEZ,QAAQC,IAAIV,EAAKgB,MAAMH,YAAY5C,WAGnC+B,EAAKe,YAAcf,EAAKe,YAAYO,KAAjBrB,OAAAsB,EAAA,EAAAtB,CAAAD,IACnBA,EAAK3B,YAAc2B,EAAK3B,YAAYiD,KAAjBrB,OAAAsB,EAAA,EAAAtB,CAAAD,IACnBA,EAAKlB,YAAckB,EAAKlB,YAAYwC,KAAjBrB,OAAAsB,EAAA,EAAAtB,CAAAD,IACnBA,EAAKb,eAAiBa,EAAKb,eAAemC,KAApBrB,OAAAsB,EAAA,EAAAtB,CAAAD,IAEtBA,EAAKR,eAAiBQ,EAAKR,eAAe8B,KAApBrB,OAAAsB,EAAA,EAAAtB,CAAAD,IACtBA,EAAKwB,cAAgBxB,EAAKwB,cAAcF,KAAnBrB,OAAAsB,EAAA,EAAAtB,CAAAD,IArBHA,6EAwBL,IAAAyB,EAAAtB,KACbA,KAAKQ,SACJ,SAAAC,GACC,MAAO,CACNzD,YAAayD,EAAUzD,YACrBuE,OAAOd,EAAUC,aAEjBc,KACA,SAAChF,EAAGiF,GAAJ,OACC5D,IAAOrB,EAAEsB,WAAWC,OAAO,YAC3BF,IAAO4D,EAAE3D,WAAWC,OAAO,gBAIhC,kBACCkD,aAAaS,QACZ,iBACAX,KAAKY,UAAUL,EAAKT,MAAM7D,wDAkD7BgD,KAAKQ,SAAS,CACbE,YAAa,CACZ5C,UAAWD,IAAO,IAAIiD,MAAQ/C,OAAO,cACrCJ,UAAW,KACXK,aAAc,uCAKR,IAAA4D,EACuC5B,KAAKa,MAAMH,YAAlD5C,EADA8D,EACA9D,UAAWH,EADXiE,EACWjE,UAAWK,EADtB4D,EACsB5D,aACtBhB,EAAgBgD,KAAKa,MAArB7D,YACR,OACCT,EAAAC,EAAAC,cAAA,OAAKL,UAAU,OACdG,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACCtF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KACjBxF,EAAAC,EAAAC,cAACuF,EAAD,CACChF,YAAaA,EACbC,oBAAqB+C,KAAKqB,iBAI5B9E,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOE,KAAK,iBACXxF,EAAAC,EAAAC,cAACwF,EAAD,CACCnE,UAAWA,EACXI,YAAa8B,KAAK9B,YAClBP,UAAWA,EACXgB,YAAaqB,KAAKrB,YAClBX,aAAcA,EACdgB,eAAgBgB,KAAKhB,eACrBK,eAAgBW,KAAKX,eACrBC,iBAAkBU,KAAKqB,0BA3HZa,IAAMC,kBCAxBC,IAASC,OACR9F,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACCX,EAAAC,EAAAC,cAAC6F,EAAD,OAEDC,SAASC,eAAe","file":"static/js/main.9e8d88d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noun_cry_2257022.9a81e82a.svg\";","module.exports = __webpack_public_path__ + \"static/media/noun_Happy_2257035.8e8d7185.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst Btn = ({ className, btnText, btnHandler }) => {\n\treturn (\n\t\t<button className={className} onClick={btnHandler}>\n\t\t\t{btnText}\n\t\t</button>\n\t);\n};\n\nBtn.propTypes = {\n\tclassName: PropTypes.string.isRequired,\n\tbtnText: PropTypes.string.isRequired,\n\tbtnHandler: PropTypes.func\n};\n\nexport default Btn;\n","import noun_cry_2257022 from './../images/noun_cry_2257022.svg';\nimport noun_Happy_2257035 from './../images/noun_Happy_2257035.svg';\n\nconst getSmileFace = mood => {\n\tif (mood === ':)') {\n\t\treturn noun_Happy_2257035;\n\t} else if (mood === ':(') {\n\t\treturn noun_cry_2257022;\n\t}\n};\n\nexport default getSmileFace;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Btn from '../../components/Btn';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport getSmileFace from '../../services/getSmileFace';\n\nimport './styles.scss';\n\nconst CalendarPage = ({ moodDataArr, btnNewRecordHandler }) => {\n\treturn (\n\t\t<div className=\"calendar__wrapper\">\n\t\t\t<small>CalendarPage</small>\n\t\t\t<Link to=\"/edition-page\" title=\"Add a new record!\">\n\t\t\t\t<Btn\n\t\t\t\t\tclassName=\"btn--newRecord\"\n\t\t\t\t\tbtnText=\"+\"\n\t\t\t\t\tbtnHandler={btnNewRecordHandler}\n\t\t\t\t/>\n\t\t\t</Link>\n\n\t\t\t<main>\n\t\t\t\t<ul className=\"mood-list\">\n\t\t\t\t\t{moodDataArr.map((moodItem, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={index} className=\"mood-item\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName=\"mood-item__image\"\n\t\t\t\t\t\t\t\t\tsrc={getSmileFace(moodItem.moodValue)}\n\t\t\t\t\t\t\t\t\talt={moodItem.moodValue}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t\t{moment(moodItem.dateValue).format('MMMM Do YYYY')}\n\t\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t\t<p className=\"mood-item__message\">{moodItem.messageValue}</p>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nCalendarPage.propTypes = {\n\tmoodDataArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tbtnNewRecordHandler: PropTypes.func.isRequired\n};\n\nexport default CalendarPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst DateInput = ({ dateValue, dateHandler }) => {\n\treturn (\n\t\t<div>\n\t\t\t<label htmlFor=\"date\">Date</label>\n\t\t\t<input type=\"date\" id=\"date\" value={dateValue} onChange={dateHandler} />\n\t\t</div>\n\t);\n};\n\nDateInput.propTypes = {\n\tdateValue: PropTypes.string,\n\tdateHandler: PropTypes.func.isRequired\n};\n\nexport default DateInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst MoodInput = ({ inputId, textLabel, moodValue, moodHandler }) => {\n\treturn (\n\t\t<div>\n\t\t\t<label htmlFor=\"mood\">{textLabel}</label>\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname=\"mood\"\n\t\t\t\tvalue={textLabel}\n\t\t\t\tid={inputId}\n\t\t\t\tchecked={moodValue.includes(textLabel)}\n\t\t\t\tonChange={moodHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nMoodInput.propTypes = {\n\tinputId: PropTypes.string.isRequired,\n\ttextLabel: PropTypes.string.isRequired,\n\tmoodValue: PropTypes.string.isRequired,\n\tmoodHandler: PropTypes.func.isRequired\n};\n\nexport default MoodInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst MessageInput = ({ messageValue, messageHandler }) => {\n\treturn (\n\t\t<textarea\n\t\t\tname=\"message\"\n\t\t\tid=\"message\"\n\t\t\tcols=\"30\"\n\t\t\trows=\"10\"\n\t\t\tplaceholder=\"Why is it a good day...?\"\n\t\t\tvalue={messageValue}\n\t\t\tonChange={messageHandler}\n\t\t/>\n\t);\n};\n\nMessageInput.propTypes = {\n\tmessageValue: PropTypes.string.isRequired,\n\tmessageHandler: PropTypes.func.isRequired\n};\n\nexport default MessageInput;\n","import React from 'react';\nimport DateInput from './../../components/DateInput';\nimport MoodInput from '../../components/MoodInput';\nimport MessageInput from '../../components/MessageInput';\nimport Btn from '../../components/Btn';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst EditionPage = ({\n\tdateValue,\n\tdateHandler,\n\tmoodValue,\n\tmoodHandler,\n\tmessageValue,\n\tmessageHandler,\n\tbtnSaveHandler,\n\tbtnCancelHandler\n}) => {\n\treturn (\n\t\t<section>\n\t\t\t<small>Editor</small>\n\t\t\t<form action=\"post\">\n\t\t\t\t<DateInput dateValue={dateValue} dateHandler={dateHandler} />\n\t\t\t\t<MoodInput\n\t\t\t\t\tinputId=\"moodHappy\"\n\t\t\t\t\ttextLabel=\":)\"\n\t\t\t\t\tmoodValue={moodValue}\n\t\t\t\t\tmoodHandler={moodHandler}\n\t\t\t\t/>\n\t\t\t\t<MoodInput\n\t\t\t\t\tinputId=\"moodSad\"\n\t\t\t\t\ttextLabel=\":(\"\n\t\t\t\t\tmoodValue={moodValue}\n\t\t\t\t\tmoodHandler={moodHandler}\n\t\t\t\t/>\n\t\t\t\t<MessageInput\n\t\t\t\t\tmessageValue={messageValue}\n\t\t\t\t\tmessageHandler={messageHandler}\n\t\t\t\t/>\n\n\t\t\t\t<Link to=\"/\" title=\"Save and go to Calendar\">\n\t\t\t\t\t<Btn\n\t\t\t\t\t\tclassName=\"btn--save\"\n\t\t\t\t\t\tbtnText=\"SAVE\"\n\t\t\t\t\t\tbtnHandler={btnSaveHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\n\t\t\t\t<Link to=\"/\" title=\"Clear data and go to Calendar\">\n\t\t\t\t\t<Btn\n\t\t\t\t\t\tclassName=\"btn--cancel\"\n\t\t\t\t\t\tbtnText=\"CANCEL\"\n\t\t\t\t\t\tbtnHandler={btnCancelHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t</form>\n\t\t</section>\n\t);\n};\n\nEditionPage.propTypes = {\n\tdateValue: PropTypes.string.isRequired,\n\tdateHandler: PropTypes.func.isRequired,\n\tmoodValue: PropTypes.string.isRequired,\n\tmoodHandler: PropTypes.func.isRequired,\n\tmessageValue: PropTypes.string.isRequired,\n\tmessageHandler: PropTypes.func.isRequired,\n\tbtnSaveHandler: PropTypes.func.isRequired,\n\tbtnCancelHandler: PropTypes.func.isRequired\n};\n\nexport default EditionPage;\n","import React from 'react';\nimport CalendarPage from '../../containers/CalendarPage';\nimport EditionPage from './../../containers/EditionPage';\nimport moment from 'moment';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './styles.scss';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tnewMoodData: {\n\t\t\t\tdateValue: moment(new Date()).format('YYYY-MM-DD'),\n\t\t\t\tmoodValue: ':)',\n\t\t\t\tmessageValue: ''\n\t\t\t},\n\t\t\tmoodDataArr: JSON.parse(localStorage.getItem('moodDataStored')) || []\n\t\t};\n\n\t\tconsole.log(this.state.newMoodData.dateValue);\n\n\t\t//Binding all methods\n\t\tthis.storeInfoLS = this.storeInfoLS.bind(this);\n\t\tthis.dateHandler = this.dateHandler.bind(this);\n\t\tthis.moodHandler = this.moodHandler.bind(this);\n\t\tthis.messageHandler = this.messageHandler.bind(this);\n\n\t\tthis.btnSaveHandler = this.btnSaveHandler.bind(this);\n\t\tthis.resetMoodData = this.resetMoodData.bind(this);\n\t}\n\n\tstoreInfoLS() {\n\t\tthis.setState(\n\t\t\tprevState => {\n\t\t\t\treturn {\n\t\t\t\t\tmoodDataArr: prevState.moodDataArr\n\t\t\t\t\t\t.concat(prevState.newMoodData)\n\t\t\t\t\t\t//Sort dates by reformating them with moment\n\t\t\t\t\t\t.sort(\n\t\t\t\t\t\t\t(a, b) =>\n\t\t\t\t\t\t\t\tmoment(a.dateValue).format('YYYYMMDD') -\n\t\t\t\t\t\t\t\tmoment(b.dateValue).format('YYYYMMDD')\n\t\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\t() =>\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t'moodDataStored',\n\t\t\t\t\tJSON.stringify(this.state.moodDataArr)\n\t\t\t\t)\n\t\t);\n\t}\n\n\t//TODO: refactor the 3 following functions in just one\n\tdateHandler = e => {\n\t\tconst { value } = e.currentTarget;\n\t\tconsole.log(value);\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tnewMoodData: {\n\t\t\t\t\t...prevState.newMoodData,\n\t\t\t\t\tdateValue: value\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tmoodHandler = e => {\n\t\tconst { value } = e.currentTarget;\n\t\tconsole.log(value);\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tnewMoodData: {\n\t\t\t\t\t...prevState.newMoodData,\n\t\t\t\t\tmoodValue: value\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tmessageHandler = e => {\n\t\tconst { value } = e.currentTarget;\n\t\tconsole.log(value);\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tnewMoodData: {\n\t\t\t\t\t...prevState.newMoodData,\n\t\t\t\t\tmessageValue: value\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tbtnSaveHandler = e => {\n\t\tthis.storeInfoLS();\n\t};\n\n\tresetMoodData() {\n\t\tthis.setState({\n\t\t\tnewMoodData: {\n\t\t\t\tdateValue: moment(new Date()).format('YYYY-MM-DD'),\n\t\t\t\tmoodValue: ':)',\n\t\t\t\tmessageValue: ''\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { dateValue, moodValue, messageValue } = this.state.newMoodData;\n\t\tconst { moodDataArr } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<CalendarPage\n\t\t\t\t\t\t\tmoodDataArr={moodDataArr}\n\t\t\t\t\t\t\tbtnNewRecordHandler={this.resetMoodData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/edition-page\">\n\t\t\t\t\t\t<EditionPage\n\t\t\t\t\t\t\tdateValue={dateValue}\n\t\t\t\t\t\t\tdateHandler={this.dateHandler}\n\t\t\t\t\t\t\tmoodValue={moodValue}\n\t\t\t\t\t\t\tmoodHandler={this.moodHandler}\n\t\t\t\t\t\t\tmessageValue={messageValue}\n\t\t\t\t\t\t\tmessageHandler={this.messageHandler}\n\t\t\t\t\t\t\tbtnSaveHandler={this.btnSaveHandler}\n\t\t\t\t\t\t\tbtnCancelHandler={this.resetMoodData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './components/App';\n\nimport './index.scss';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}