{"version":3,"sources":["images/noun_cry_2257022.svg","images/noun_Happy_2257035.svg","components/Btn/index.js","services/getSmileFace.js","components/MoodRegister/index.js","containers/CalendarPage/index.js","components/DateInput/index.js","components/MoodInput/index.js","components/MessageInput/index.js","containers/EditionPage/index.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Btn","_ref","className","btnText","btnHandler","react_default","a","createElement","onClick","getSmileFace","mood","noun_Happy_2257035","noun_cry_2257022","MoodRegister","moodItem","title","message","src","alt","moment","date","format","CalendarPage","moodDataArr","btnNewRecordHandler","react_router_dom","to","components_Btn","map","index","key","components_MoodRegister","DateInput","moodInputsHandler","htmlFor","type","id","name","value","onChange","MoodInput","inputId","textLabel","checked","includes","MessageInput","cols","rows","placeholder","EditionPage","btnSaveHandler","btnCancelHandler","action","components_DateInput","components_MoodInput","components_MessageInput","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","_e$currentTarget","currentTarget","setState","prevState","newMoodData","objectSpread","defineProperty","storeInfoLS","state","Date","JSON","parse","localStorage","getItem","bind","assertThisInitialized","resetMoodData","_this2","concat","sort","b","setItem","stringify","_this$state$newMoodDa","react_router","exact","path","containers_CalendarPage","containers_EditionPage","React","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8df63efe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noun_cry_2257022.9a81e82a.svg\";","module.exports = __webpack_public_path__ + \"static/media/noun_Happy_2257035.8e8d7185.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst Btn = ({ className, btnText, btnHandler }) => {\n\treturn (\n\t\t<button className={className} onClick={btnHandler}>\n\t\t\t{btnText}\n\t\t</button>\n\t);\n};\n\nBtn.propTypes = {\n\tclassName: PropTypes.string.isRequired,\n\tbtnText: PropTypes.string.isRequired,\n\tbtnHandler: PropTypes.func\n};\n\nexport default Btn;\n","import noun_cry_2257022 from './../images/noun_cry_2257022.svg';\nimport noun_Happy_2257035 from './../images/noun_Happy_2257035.svg';\n\nconst getSmileFace = mood => {\n\tif (mood === ':)') {\n\t\treturn noun_Happy_2257035;\n\t} else if (mood === ':(') {\n\t\treturn noun_cry_2257022;\n\t}\n};\n\nexport default getSmileFace;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport getSmileFace from '../../services/getSmileFace';\nimport moment from 'moment';\n\nimport './styles.scss';\n\nconst MoodRegister = ({ moodItem }) => {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"mood-item\"\n\t\t\ttitle={moodItem.mood === ':)' ? 'yeyyy!' : 'ayns...'}\n\t\t>\n\t\t\t{moodItem.message ? (\n\t\t\t\t<p className=\"mood-item__message\">{moodItem.message}</p>\n\t\t\t) : null}\n\t\t\t<img\n\t\t\t\tclassName=\"mood-item__image\"\n\t\t\t\tsrc={getSmileFace(moodItem.mood)}\n\t\t\t\talt={moodItem.mood}\n\t\t\t/>\n\t\t\t<p className=\"mood-item__date\">\n\t\t\t\t{moment(moodItem.date).format('MMMM Do YYYY')}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nMoodRegister.propTypes = {\n\tmoodItem: PropTypes.object\n};\n\nexport default MoodRegister;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Btn from '../../components/Btn';\nimport PropTypes from 'prop-types';\nimport MoodRegister from '../../components/MoodRegister';\n\nimport './styles.scss';\n\nconst CalendarPage = ({ moodDataArr, btnNewRecordHandler }) => {\n\treturn (\n\t\t<div className=\"calendar__wrapper\">\n\t\t\t<header>\n\t\t\t\t<h1 className=\"page__title\">CalendarPage</h1>\n\t\t\t\t<Link to=\"/edition-page\" title=\"Add a new record!\">\n\t\t\t\t\t<Btn\n\t\t\t\t\t\tclassName=\"btn--newRecord\"\n\t\t\t\t\t\tbtnText=\"+\"\n\t\t\t\t\t\tbtnHandler={btnNewRecordHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<ul className=\"mood-list\">\n\t\t\t\t\t{moodDataArr.map((moodItem, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={index} className=\"mood-item\">\n\t\t\t\t\t\t\t\t<MoodRegister moodItem={moodItem} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nCalendarPage.propTypes = {\n\tmoodDataArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n\tbtnNewRecordHandler: PropTypes.func.isRequired\n};\n\nexport default CalendarPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst DateInput = ({ date, moodInputsHandler }) => {\n\treturn (\n\t\t<div>\n\t\t\t<label className=\"form__legend\" htmlFor=\"date\">\n\t\t\t\tDate\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName=\"form__item date\"\n\t\t\t\ttype=\"date\"\n\t\t\t\tid=\"date\"\n\t\t\t\tname=\"date\"\n\t\t\t\tvalue={date}\n\t\t\t\tonChange={moodInputsHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nDateInput.propTypes = {\n\tdate: PropTypes.string,\n\tmoodInputsHandler: PropTypes.func.isRequired\n};\n\nexport default DateInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport getSmileFace from '../../services/getSmileFace';\n\nimport './styles.scss';\n\nconst MoodInput = ({ inputId, textLabel, mood, moodInputsHandler }) => {\n\treturn (\n\t\t<div className=\"mood-input\">\n\t\t\t<label className=\"mood-input__label\" htmlFor=\"mood\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"mood-input__image\"\n\t\t\t\t\tsrc={getSmileFace(textLabel)}\n\t\t\t\t\talt={textLabel}\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname=\"mood\"\n\t\t\t\tvalue={textLabel}\n\t\t\t\tid={inputId}\n\t\t\t\tchecked={mood.includes(textLabel)}\n\t\t\t\tonChange={moodInputsHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nMoodInput.propTypes = {\n\tinputId: PropTypes.string.isRequired,\n\ttextLabel: PropTypes.string.isRequired,\n\tmood: PropTypes.string.isRequired,\n\tmoodInputsHandler: PropTypes.func.isRequired\n};\n\nexport default MoodInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst MessageInput = ({ message, moodInputsHandler }) => {\n\treturn (\n\t\t<div className=\"bubble-container\">\n\t\t\t<label className=\"form__legend\" htmlFor=\"message\">\n\t\t\t\tMensaje <span>(opcional)</span>\n\t\t\t</label>\n\t\t\t<textarea\n\t\t\t\tclassName=\"form__item message\"\n\t\t\t\tname=\"message\"\n\t\t\t\tid=\"message\"\n\t\t\t\tcols=\"30\"\n\t\t\t\trows=\"10\"\n\t\t\t\tplaceholder=\"Why is it a good day...?\"\n\t\t\t\tvalue={message}\n\t\t\t\tonChange={moodInputsHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nMessageInput.propTypes = {\n\tmessage: PropTypes.string.isRequired,\n\tmoodInputsHandler: PropTypes.func.isRequired\n};\n\nexport default MessageInput;\n","import React from 'react';\nimport DateInput from './../../components/DateInput';\nimport MoodInput from '../../components/MoodInput';\nimport MessageInput from '../../components/MessageInput';\nimport Btn from '../../components/Btn';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst EditionPage = ({\n\tdate,\n\tmood,\n\tmessage,\n\tmoodInputsHandler,\n\tbtnSaveHandler,\n\tbtnCancelHandler\n}) => {\n\treturn (\n\t\t<div className=\"edition__wrapper\">\n\t\t\t<h1 className=\"page__title\">Editor</h1>\n\t\t\t<form className=\"form\" action=\"post\">\n\t\t\t\t<DateInput date={date} moodInputsHandler={moodInputsHandler} />\n\t\t\t\t<fieldset className=\"form__fieldset\">\n\t\t\t\t\t<legend className=\"form__legend\">Mood</legend>\n\t\t\t\t\t<MoodInput\n\t\t\t\t\t\tinputId=\"moodHappy\"\n\t\t\t\t\t\ttextLabel=\":)\"\n\t\t\t\t\t\tmood={mood}\n\t\t\t\t\t\tmoodInputsHandler={moodInputsHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<MoodInput\n\t\t\t\t\t\tinputId=\"moodSad\"\n\t\t\t\t\t\ttextLabel=\":(\"\n\t\t\t\t\t\tmood={mood}\n\t\t\t\t\t\tmoodInputsHandler={moodInputsHandler}\n\t\t\t\t\t/>\n\t\t\t\t</fieldset>\n\t\t\t\t{mood === ':)' ? (\n\t\t\t\t\t<MessageInput\n\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\tmoodInputsHandler={moodInputsHandler}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<Link to=\"/\" title=\"Save and go to Calendar\">\n\t\t\t\t\t<Btn\n\t\t\t\t\t\tclassName=\"btn--save\"\n\t\t\t\t\t\tbtnText=\"Save\"\n\t\t\t\t\t\tbtnHandler={btnSaveHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/\" title=\"Clear data and go to Calendar\">\n\t\t\t\t\t<Btn\n\t\t\t\t\t\tclassName=\"btn--cancel\"\n\t\t\t\t\t\tbtnText=\"Cancel\"\n\t\t\t\t\t\tbtnHandler={btnCancelHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nEditionPage.propTypes = {\n\tdate: PropTypes.string.isRequired,\n\tmood: PropTypes.string.isRequired,\n\tmessage: PropTypes.string.isRequired,\n\tmoodInputsHandler: PropTypes.func,\n\tbtnSaveHandler: PropTypes.func.isRequired,\n\tbtnCancelHandler: PropTypes.func.isRequired\n};\n\nexport default EditionPage;\n","import React from 'react';\nimport CalendarPage from '../../containers/CalendarPage';\nimport EditionPage from './../../containers/EditionPage';\nimport moment from 'moment';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './styles.scss';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tnewMoodData: {\n\t\t\t\tdate: moment(new Date()).format('YYYY-MM-DD'),\n\t\t\t\tmood: ':)',\n\t\t\t\tmessage: ''\n\t\t\t},\n\t\t\tmoodDataArr: JSON.parse(localStorage.getItem('moodDataStored')) || []\n\t\t};\n\n\t\t//Binding all methods\n\t\tthis.moodInputsHandler = this.moodInputsHandler.bind(this);\n\t\tthis.storeInfoLS = this.storeInfoLS.bind(this);\n\t\tthis.btnSaveHandler = this.btnSaveHandler.bind(this);\n\t\tthis.resetMoodData = this.resetMoodData.bind(this);\n\t}\n\n\tstoreInfoLS() {\n\t\tthis.setState(\n\t\t\tprevState => {\n\t\t\t\treturn {\n\t\t\t\t\tmoodDataArr: prevState.moodDataArr\n\t\t\t\t\t\t.concat(prevState.newMoodData)\n\t\t\t\t\t\t//Sort dates by reformating them with moment\n\t\t\t\t\t\t.sort(\n\t\t\t\t\t\t\t(a, b) =>\n\t\t\t\t\t\t\t\tmoment(a.date).format('YYYYMMDD') -\n\t\t\t\t\t\t\t\tmoment(b.date).format('YYYYMMDD')\n\t\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t},\n\t\t\t() =>\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t'moodDataStored',\n\t\t\t\t\tJSON.stringify(this.state.moodDataArr)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tmoodInputsHandler = e => {\n\t\tconst { value, name } = e.currentTarget;\n\t\tthis.setState(prevState => {\n\t\t\treturn {\n\t\t\t\tnewMoodData: {\n\t\t\t\t\t...prevState.newMoodData,\n\t\t\t\t\t[name]: value\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t};\n\n\tbtnSaveHandler = e => {\n\t\tthis.storeInfoLS();\n\t};\n\n\tresetMoodData() {\n\t\tthis.setState({\n\t\t\tnewMoodData: {\n\t\t\t\tdate: moment(new Date()).format('YYYY-MM-DD'),\n\t\t\t\tmood: ':)',\n\t\t\t\tmessage: ''\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { date, mood, message } = this.state.newMoodData;\n\t\tconst { moodDataArr } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<CalendarPage\n\t\t\t\t\t\t\tmoodDataArr={moodDataArr}\n\t\t\t\t\t\t\tbtnNewRecordHandler={this.resetMoodData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"/edition-page\">\n\t\t\t\t\t\t<EditionPage\n\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\tmood={mood}\n\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\tmoodInputsHandler={this.moodInputsHandler}\n\t\t\t\t\t\t\tbtnSaveHandler={this.btnSaveHandler}\n\t\t\t\t\t\t\tbtnCancelHandler={this.resetMoodData}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './components/App';\n\nimport './index.scss';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}